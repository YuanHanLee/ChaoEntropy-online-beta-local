{
    "contents" : "require(shiny)\nrequire(knitr)\n# require(shinyIncubator)\n\nloadingBar <- tags$div(class=\"progress progress-striped active\",\n                       tags$div(class=\"bar\", style=\"width: 100%;\"))\n# Code for loading message\nloadingMsg <- tags$div(class=\"modal\", tabindex=\"-1\", role=\"dialog\", \n                       \"aria-labelledby\"=\"myModalLabel\", \"aria-hidden\"=\"true\",\n                       tags$div(class=\"modal-header\",\n                                tags$h3(id=\"myModalHeader\", \"Loading...\")),\n                       tags$div(class=\"modal-footer\",\n                                loadingBar))\n# The conditional panel to show when shiny is busy\nloadingPanel <- conditionalPanel(paste(\"input.goButton > 0 &&\", \n                                       \"$('html').hasClass('shiny-busy')\"),\n                                 loadingMsg)\n\n\nshinyUI(navbarPage(\n#   theme = \"bootstrap.css\",\n  title=(\"ChaoEntropy Online\"),\n  tabPanel((\"Shannon entropy\"),\n           h1(\"ChaoEntropy\"),\n           sidebarLayout(\n             sidebarPanel(\n               tags$head(\n                 tags$style(type=\"text/css\", \"label.radio { display: inline-block; }\", \".radio input[type=\\\"radio\\\"] { float: none; }\"),\n                 tags$style(type=\"text/css\", \"select { max-width: 250px; }\"),\n                 tags$style(type=\"text/css\", \"input { max-width: 250px; }\"),\n                 tags$style(type=\"text/css\", \"textarea { max-width: 230px; }\"),\n                 tags$style(type='text/css', \".span4 { max-width: 300px; }\")\n               ),\n               actionButton(\"goButton\", span(\"Run!\", style=\"font-size: 40px\"), icon = icon(\"rocket\", \"fa-3x\")),\n               p(h4(\"Data Setting\")),\n               wellPanel(\n                 selectInput(inputId=\"datatype\", label=\"Select data type:\",\n                             choices=c(\"Abundance data\"=\"abu\", \"Incidence data\"=\"inc\")),\n                 \n                 radioButtons(inputId=\"source\", \"Choose one:\", \n                              choices=c(\"Import data\" = \"import\", \"Upload data\" = \"upload\")\n                 ),\n                 conditionalPanel(condition=\"input.source == 'upload'\",\n                                  fileInput(\"files\", \"Choose File (.csv)\", accept=\".csv\")\n                 ),\n                 \n                 conditionalPanel(condition=\"input.source == 'import'\",\n                                  p(\"Import data:\"),\n                                  conditionalPanel(\n                                    condition=\"input.datatype == 'abu'\",\n                                    tags$textarea(id=\"copyAndPaste_abu\", rows=5, \n                                                  \"Spider 46 22 17 15 15  9  8  6  6  4  2  2  2  2  1  1  1  1  1  1  1  1  1  1  1  1  \\nBirds 752 276 194 126 121 97  95  83  72  44  39  0  16  15  0  13  9  9  9  8  7  4  0  0  2  2  1  1  1\")\n                                  ),\n                                  conditionalPanel(\n                                    condition=\"input.datatype == 'inc'\",\n                                    tags$textarea(id=\"copyAndPaste_inc\", rows=5, \n                                                  \"Ant 62  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  3  3  3  3  3  3  3  3  3  3  3  3  3  4  4  4  4  4  4  4  5  5  5  5  6  6  7  9  9  9  9 10 10 12 13 14 14 14 15 15 16 18 19 19 20 29 \\nSeedlings 121  61  47  52  43  43   9  24   5  24  11  11  13  17   6  10   3   8   9   9  3   6   6   1   7   4   6   6   4   3   4   2   2   1   1\")\n                                  ),          \n                                  p(em(\"Refer to user guide for importing data\"))\n                 ),\n                 \n                 uiOutput(\"choose_dataset\"),\n                 p(em(\"Using ctrl / command key to select multiple datasets you want\"))\n               ),\n               \n               p(h4(\"General Setting\")),\n               wellPanel(\n                 conditionalPanel(\n                   condition = \"input.datatype == 'abu'\",\n                   checkboxGroupInput(inputId=\"method1\", label=\"Select the methods:\",\n                                      choices=c(\"Chao\", \"ChaoShen\", \"Grassberger\", \"Jackknife\", \"Zhang\", \"Observed\"),\n                                      selected=c(\"Chao\", \"ChaoShen\", \"Grassberger\", \"Jackknife\", \"Zhang\", \"Observed\"))\n                 ),\n                 \n                 conditionalPanel(\n                   condition = \"input.datatype == 'inc'\",\n                   checkboxGroupInput(inputId=\"method2\", label=\"Select the methods:\",\n                                      choices=c(\"Chao\", \"Observed\"), selected=c(\"Chao\", \"Observed\"))\n                 ),\n                 numericInput(inputId=\"nboot\", label=\"Number of bootstraps\", value=100, min=1, max=1000, step=1),\n                 numericInput(inputId=\"conf\", label=\"Confidence level\", value=0.95, min=0, max=1, step=0.01)\n               )\n               \n             ),\n             mainPanel(\n               tabsetPanel(\n                 tabPanel(\"Data Summary\", h3(\"Basic data information\"),\n                          icon = icon(\"list-alt\"),\n                          verbatimTextOutput(\"data_summary\")\n                 ),\n                 tabPanel(\"Estimation\", h3(\"Estimation of entropy\"), \n                          loadingPanel,\n                          icon = icon(\"thumbs-up\"),\n                          verbatimTextOutput('est'),\n                          downloadLink(\"dlest\", \"Download as csv file\"),\n                          conditionalPanel(\n                            condition=\"input.datatype == 'abu'\",\n                            includeMarkdown(\"man/estimator_abu.md\")),\n                          conditionalPanel(\n                            condition=\"input.datatype == 'inc'\",\n                            includeMarkdown(\"man/estimator_inc.md\"))\n                 ),\n                 \n                 tabPanel(\"Visualization\", h3(\"Comparison with different methods\"), \n                          loadingPanel,\n                          icon = icon(\"bar-chart-o\"),\n                          plotOutput(\"visualization\", width=\"800px\", height=\"auto\")\n                          \n                 ),\n                 tabPanel(\"User Guide\", icon = icon(\"question-circle\"),includeMarkdown(\"man/user.md\")),\n                 tabPanel(\"R code\", icon = icon(\"wrench\"), includeMarkdown(\"man/[R]code.md\"))\n               )\n             )\n           )\n  ),\n  \n  tabPanel(\n    title=(\"Mutual Information \"),\n    h1(\"ChaoMI\"),\n    sidebarLayout(\n      sidebarPanel(\n        tags$head(\n          tags$style(type=\"text/css\", \"label.radio { display: inline-block; }\", \".radio input[type=\\\"radio\\\"] { float: none; }\"),\n          tags$style(type=\"text/css\", \"select { max-width: 250px; }\"),\n          tags$style(type=\"text/css\", \"input { max-width: 250px; }\"),\n          tags$style(type=\"text/css\", \"textarea { max-width: 230px; }\"),\n          tags$style(type='text/css', \".span4 { max-width: 300px; }\")\n        ),\n        actionButton(\"MIgoButton\", span(\"Run!\", style=\"font-size: 40px\"), icon = icon(\"rocket\", \"fa-3x\")),\n        p(h4(\"Data Setting\")),\n        wellPanel(\n          radioButtons(inputId=\"MIsource\", \"Choose one:\", \n                       choices=c(\"Demo data\" = \"MIdemo\", \"Upload data\" = \"MIupload\")\n          ),\n          conditionalPanel(condition=\"input.MIsource == 'MIupload'\",\n                           fileInput(\"MIfiles1\", \"Choose File (.csv)\", accept=\".csv\"),\n                           fileInput(\"MIfiles2\", \"Choose File (.csv)\"),\n                           fileInput(\"MIfiles3\", \"Choose File (.csv)\")\n          ),\n          uiOutput(\"MIchoose_dataset\"),\n          p(em(\"Using ctrl / command key to select multiple datasets you want\"))\n        ),\n        \n        p(h4(\"General Setting\")),\n        wellPanel(\n          checkboxGroupInput(inputId=\"MImethod\", label=\"Select the methods:\",\n                             choices=c(\"Chao\", \"ChaoShen\", \"Jackknife\", \"Bias Correct 1\", \"Bias Correct 2\", \"Observed\"),\n                             selected=c(\"Chao\", \"ChaoShen\", \"Jackknife\", \"Bias Correct 1\", \"Bias Correct 2\", \"Observed\")),\n          numericInput(inputId=\"MInboot\", label=\"Number of bootstraps\", value=100, min=1, max=1000, step=1),\n          numericInput(inputId=\"MIconf\", label=\"Confidence level\", value=0.95, min=0, max=1, step=0.01)\n        )\n      ),\n      mainPanel(\n        tabsetPanel(\n          tabPanel(\"Data Viewer\", h3(\"Show raw data\"),\n                   icon = icon(\"list-alt\"),\n                   uiOutput('MIdata_summary')\n          ),\n          tabPanel(\"Estimation\", h3(\"Estimation of entropy\"), \n                   loadingPanel,\n                   icon = icon(\"thumbs-up\"),\n                   verbatimTextOutput('MIest'),\n                   downloadLink(\"MIdlest\", \"Download as csv file\"),\n                   includeMarkdown(\"man-mi/estimator-mi.md\")\n          ),\n          tabPanel(\"Visualization\", h3(\"Comparison with different methods\"), \n                   loadingPanel,\n                   icon = icon(\"bar-chart-o\"),\n                   plotOutput(\"MIvisualization\", width=\"800px\", height=\"auto\")\n          ),\n          tabPanel(\"User Guide\", icon = icon(\"question-circle\"), \n                   includeMarkdown(\"man-mi/user-mi.md\"))\n          #           tabPanel(\"R code\", icon = icon(\"wrench\"), \n          #                    p(\"Coming soon :)\"))\n        )\n      )\n      \n    )\n  )\n  \n  \n))\n",
    "created" : 1403178345565.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1009195131",
    "id" : "B3C5D74A",
    "lastKnownWriteTime" : 1403850588,
    "path" : "~/Documents/GitHub/ChaoEntropy-beta-local/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}